include DocumentsHelper

module IfiltersHelper
  def self.get_ifiltered_header(h, row)
    retval = []
    
    if row.is_a? Array
      row = row.join(' ')
    end

    matches = /#{h["val"]}/.match(row)
    if matches != nil
      matches.captures.each do |mtext|
        retval << mtext
      end
    end
    
    return retval
  end

  
  #Returns a autogenerated list of colnames, based on column number
  # i.e. [1,2,3...]
  def self.get_ifiltered_colnames(row)
    return (1..row.count).to_a
  end


  def get_internal_ifilters
    retval = []

    #CSV
    f = Ifilter.new( #new but don't save
                    :name => "CSV (pre-defined)",
                    :regex=> nil
                  )
    f.id = -1 #we don't want to stomp on an valid id
    retval.prepend(f)

    #XML
    f = Ifilter.new( #new but don't save
                    :name => "XML (pre-defined)",
                    :regex=> nil
                  )
    f.id = -2 #we don't want to stomp on an valid id    
    retval.prepend(f)

    retval
  end


  #Gets internal and user defined ifilters
  def get_ifilters
    retval = Ifilter.all
    get_internal_ifilters.each do |f|
      retval.prepend(f)
    end

    return retval
  end


  def get_ifilter(id)
    retval = Ifilter.where(:id => id).first

    if (retval == nil)
      retval = nil
      get_internal_ifilters.collect do |f|
        if f.id == id 
         retval = f
        end
      end
    end

    return retval
  end


  def ifilters_get_select_options
    get_ifilters.collect {|ifilter| [ ifilter.name, ifilter.id ] }
  end
end
