var SCAFFOLD_RESULTS = [];
var BLACKLIST_KEYS = ["created_at", "id", "updated_at"];

//Comes from app/views/layouts/application.html.erb
// CONTROLLER_NAME - comes from app/views/layouts/application.html.erb
// CONTROLLER_WHERE - optional; if set, should be set to 'column_name=value'


jQuery.ajaxSetup({ 
	'beforeSend': function(xhr) {
					xhr.setRequestHeader("Accept", "text/javascript");
					xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
					}
})

jQuery(function($) {

	function destroyScaffold(e) {
		e.preventDefault();
		
		//$.post(this.href, {_method:'delete'}, null, "script");
		$.ajax({
			type: 'POST',
			beforeSend: function(xhr){
	        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
	    	},
			url: this.href,
			data: {_method:'delete'},
			success: null,
			dataType: "script"
		});
			
		return(false);
	}
	
	
	///////////////////////////////////////////////////////////////////////////////
	// Live Table functions
	///////////////////////////////////////////////////////////////////////////////
	
	function getScaffoldTableText(result)
	{	
		var text = "<table class=\"table\">";
		
		for(var key in result[0]) {
			//don't display certain keys
			if(BLACKLIST_KEYS.indexOf(key) == -1) {
				text += "<td>";
				text += "<b>" + key + "</b>";
				text += "</td>\n";
			}
		}
		
		for( var i in result)
		{
			text += "\t<tr>\n";
			var dict = result[i];
			
			for(var key in dict) {
				//don't display certain keys
				if(BLACKLIST_KEYS.indexOf(key) == -1) {
					text += "<td>";
					text += dict[key];
					text += "</td>\n";
				}
			}
			
			text += "<td>";
			text += '<a href="/' + CONTROLLER_NAME + '/' + dict['id'] + '">Show</a> ';
			text += '<a href="/' + CONTROLLER_NAME + '/' + dict['id'] + '/edit">Edit</a> ';
			text += '<a href="/' + CONTROLLER_NAME + '/' + dict['id'] + '" class="scaffold-delete">Destroy</a>';
			text += "</td>";
			text += "\t</tr>\n";
		}
		text += "</table>\n";
		
		return text;
	}
	
	
	function updateScaffoldTable() {
		var url_str = '/' + CONTROLLER_NAME + '.json';
		
		if(typeof(CONTROLLER_WHERE) != "undefined") {
			url_str += '?' + CONTROLLER_WHERE;
		}
		
		$.ajax(url_str, {
			//data: { data : "div.uploads" },
			cache: false,
			beforeSend: function(result) {
				//$('div.scaffold table').hide();
			},
			success: function(result) {
				//$('div.scaffold table').after('<p>test</p>');
				if(result != SCAFFOLD_RESULTS) {
					SCAFFOLD_RESULTS = result;
					text = getScaffoldTableText(result);
					
					$('div.scaffold table').remove();
					$('div.scaffold').append(text);
				}
				//TODO: renabled for continued updating, but we need to do long polling	
				//setTimeout(updateScaffoldTable, 2000);
			},
			error: function(result) {
				$('#error').show();
			}
		});
	}
	
	
	
	
	///////////////////////////////////////////////////////////////////////////////
	// Live Scaffold Main
	///////////////////////////////////////////////////////////////////////////////
	$(document).ready(function () {			
		var s_table = $('div.scaffold table');
		var s_tree 	= $('div.scaffold div.collection-tree')
			
		//Scaffold table stuff
		if(s_table.length > 0) {
			s_table.remove();
			updateScaffoldTable();
		}
		else if(s_tree.length > 0) {
			//updateScaffoldCollectionTree();
		}
		
		//new binding to destroy
		//$('a.scaffold-delete').live("click", destroyScaffold);
		//new binding to plus
		//$('a#col-doc-plus').live("click", addCollectionAttrs);
	});
});